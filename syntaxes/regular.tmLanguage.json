{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "regulartemplate",
	"patterns": [
        {
            "match": "&", 
            "name": "invalid.illegal.bad-ampersand.html"
        },
        {
            "beginCaptures": {
                "1": {
                "name": "punctuation.definition.tag.begin.html"
                },
                "2": {
                "name": "entity.name.tag.template.html"
                }
            },
            "begin": "(<)(template)(?![^/>]*/>\\s*$)",
            "endCaptures": {
                "1": {
                "name": "punctuation.definition.tag.begin.html"
                },
                "2": {
                "name": "entity.name.tag.template.html"
                },
                "3": {
                "name": "punctuation.definition.tag.end.html"
                }
            },
            "end": "(</)(template)(>)",
            "patterns": [
                {
                    "include": "text.html.regular-html#tag-stuff"
                },
                {
                "beginCaptures": {
                    "1": {
                    "name": "punctuation.definition.tag.end.html"
                    }
                },
                "begin": "(>)",
                "end": "(?=</template>)",
                "patterns": [
                    {
                    "include": "text.html.regular-html"
                    }
                ],
                "contentName": "text.html.regular-html"
                }
            ]
        },
        {
            "beginCaptures": {
              "1": {
                "name": "punctuation.definition.tag.begin.html"
              },
              "2": {
                "name": "entity.name.tag.script.html"
              }
            },
            "begin": "(<)(script)(?![^/>]*/>\\s*$)",
            "endCaptures": {
              "1": {
                "name": "punctuation.definition.tag.begin.html"
              },
              "2": {
                "name": "entity.name.tag.script.html"
              },
              "3": {
                "name": "punctuation.definition.tag.end.html"
              }
            },
            "end": "(</)(script)(>)",
            "patterns": [
              {
                "include": "text.html.regular-html#tag-stuff"
              },
              {
                "beginCaptures": {
                  "1": {
                    "name": "punctuation.definition.tag.end.html"
                  }
                },
                "begin": "(>)",
                "end": "(?=</script>)",
                "patterns": [
                  {
                    "include": "source.js"
                  }
                ],
                "contentName": "source.js"
              }
            ]
        },
        
        {
            "beginCaptures": {
              "1": {
                "name": "punctuation.definition.tag.begin.html"
              },
              "2": {
                "name": "entity.name.tag.style.html"
              }
            },
            "begin": "(<)(style)\\b(?![^/>]*/>\\s*$)",
            "endCaptures": {
              "1": {
                "name": "punctuation.definition.tag.begin.html"
              },
              "2": {
                "name": "entity.name.tag.style.html"
              },
              "3": {
                "name": "punctuation.definition.tag.end.html"
              }
            },
            "end": "(</)(style)(>)",
            "patterns": [
              {
                "include": "text.html.regular-html#tag-stuff"
              },
              {
                "beginCaptures": {
                  "1": {
                    "name": "punctuation.definition.tag.end.html"
                  }
                },
                "begin": "(>)",
                "end": "(?=</style>)",
                "patterns": [
                  {
                    "include": "source.css"
                  }
                ],
                "contentName": "source.css"
              }
            ]
        },
        {
            "beginCaptures": {
              "1": {
                "name": "punctuation.definition.tag.begin.html"
              },
              "2": {
                "name": "entity.name.tag.style.html"
              }
            },
            "begin": "(<)(style)\\b(?=[^>]*lang=('less'|\"less\"))(?![^/>]*/>\\s*$)",
            "endCaptures": {
              "1": {
                "name": "punctuation.definition.tag.begin.html"
              },
              "2": {
                "name": "entity.name.tag.style.html"
              },
              "3": {
                "name": "punctuation.definition.tag.end.html"
              }
            },
            "end": "(</)(style)(>)",
            "patterns": [
              {
                "include": "text.html.regular-html#tag-stuff"
              },
              {
                "beginCaptures": {
                  "1": {
                    "name": "punctuation.definition.tag.end.html"
                  }
                },
                "begin": "(>)",
                "end": "(?=</style>)",
                "patterns": [
                  {
                    "include": "source.css.less"
                  }
                ],
                "contentName": "source.css.less"
              }
            ]
        }
	],
	"repository": {
        "bracket": {
            "name": "markup.heading",
            "begin": "{",
            "end": "}",
            "patterns": [{
                "name": "markup.underline",
                "match": "#\\b(if|elseif|list|include|as|by)\\b"
            }, {
                "name": "keyword.control",
                "match": "/(if|list)"
            }, {
                "name": "keyword.control",
                "match": "(as|by)"
            }, {
                "name": "keyword.operator",
                "match": "\\s(>|<|>=|<=|[=]{1,3})\\s"
            }, {
                "name": "variable.name",
                "match": "\\$?[a-zA-Z0-9_\\.]+"
            }, {
                "name": "string.quoted.double",
                "begin": "'",
                "end": "'"
            }, {
                "name": "string.quoted.interpolated",
                "begin": "`",
                "end": "`",
                "patterns": [{
                    "name": "markup.heading",
                    "begin": "\\${",
                    "end": "}",
                    "patterns": [{
                        "name": "variable.parameter",
                        "match": "\\w+"
                    }]
                }]
            }, {
                "name": "keyword.control",
                "begin": "(\\{)",
                "end": "(\\})",
                "beginCaptures": {
                    "1": {
                        "name": "keyword.operator"
                    }
                },
                "endCaptures": {
                    "1": {
                        "name": "keyword.operator"
                    }
                },
                "patterns":[{
                    "name": "variable.name",
                    "match": "[a-zA-Z0-9_\\.]+"
                }, {
                    "name": "entity.name.function",
                    "match": "([a-zA-Z0-9_\\.]+)\\((.*?)\\)"
                }]
            }]
        },
        "htmlbracket": {
            "begin": "</?[a-zA-Z]+",
            "end": "\\s?>",
            "beginCaptures": {
                "0" : {
                    "name": "constant.language"
                }
            },
            "endCaptures": {
                "0" : {
                    "name": "constant.language"
                }
            },
            "patterns": [{
                "name": "string",
                "begin": "\"",
                "end": "\"",
                "patterns": [{
                    "name": "keyword.control",
                    "match": "\\b(each|if|else|set|block|extend|include)\\b"
                }, {
                    "name": "keyword.control",
                    "match": "/(if|each|block)"
                }, {
                    "name": "markup.heading",
                    "match": "{{|}}"
                }, {
                    "name": "keyword.operator",
                    "match": "\\s(>|<|>=|<=|[=]{1,3})\\s"
                }, {
                    "name": "support.class",
                    "match": "\\s(\\?|\\|\\||\\||\\+|:|@|&&)\\s"
                }, {
                    "name": "variable.name",
                    "match": "\\$[a-zA-Z0-9_\\.]+"
                }, {
                    "name": "string.quoted.double",
                    "begin": "'",
                    "end": "'"
                }, {
                    "name": "keyword.operator",
                    "match": "\\[|\\]"
                }]
            }, {
                "name": "markup.heading",
                "match": "{{|}}"
            }, {
                "name": "keyword.control",
                "match": "\\b(each|if|else|set|block|extend|include)\\b"
            }, {
                "name": "keyword.control",
                "match": "/(if|each|block)"
            }, {
                "name": "keyword.operator",
                "match": "\\s(>|<|>=|<=|[=]{1,3})\\s"
            }, {
                "name": "support.class",
                "match": "\\s(\\?|\\|\\||\\||\\+|:|@|&&)\\s"
            }, {
                "name": "variable.name",
                "match": "\\$?[a-zA-Z0-9_\\.]+"
            }, {
                "name": "string.quoted.double",
                "begin": "'",
                "end": "'"
            }, {
                "name": "keyword.operator",
                "match": "\\[|\\]"
            }]
        },
        "comments": {
            "patterns": [{
                "name": "comment.line.double-slash",
                "match": "\/\/[^\n]*"
            }]
        }
	},
	"scopeName": "source.regular"
}